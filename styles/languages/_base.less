
.syntax--comment {
  color: @syntax-comment-color;
  font-style: italic;

  .syntax--punctuation.syntax--definition {
    color: @syntax-comment-color;
  }
  .syntax--todo, .syntax--todo.syntax--storage {
    color: @magenta;
  }
}

.syntax--string {
  color: @syntax-color-value;

  &.syntax--punctuation.syntax--definition,
  .syntax--punctuation.syntax--definition.syntax--char {
      color: @syntax-color-value;
  }
}

.syntax--constant {
  &.syntax--numeric, &.syntax--language {
    color: @syntax-color-constant;
  }
  &.syntax--character, &.syntax--other {
    color: @syntax-color-constant;
  }
}

.syntax--variable {
  color: @syntax-color-variable;
}

.syntax--property {
  color: @syntax-color-property;
}

.syntax--keyword {
  color: @syntax-color-keyword;
}

.syntax--operator,
.syntax--keyword.syntax--new {
  color: @syntax-operator;
}

// type fixes JS let/var: move to js lang file if it causes problems
.syntax--storage,
.syntax--storage.syntax--type {
  color: @syntax-color-keyword;
}

.syntax--type,
.syntax--class {
  color: @syntax-color-class;
}

.syntax--function {
  color: @syntax-color-function;
}

// ??
.syntax--attribute-name {
    color: @syntax-color-attribute;
}

.syntax--support {
  &.syntax--function {
    color: @blue;
    &.syntax--builtin {
      color: @green;
    }
  }
  &.syntax--type,
  &.syntax--class {
    color: @green;
  }
}

.syntax--invalid {
  &.syntax--deprecated {
    color: @orange;
    text-decoration: underline;
  }
  &.syntax--illegal {
    color: @red;
    text-decoration: underline;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--meta.syntax--brace,
.syntax--bracket.syntax--round,
.syntax--punctuation.syntax--definition,
.syntax--punctuation.syntax--curlybrace,
.syntax--punctuation.syntax--parenthesis,
.syntax--punctuation.syntax--scope {
    color: @syntax-bracket;
}
